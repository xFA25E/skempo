* Skempo
  A futile attempt to fuse skeleton, tempo and abbrev.  See *Commentary*.
* Example
  #+begin_src emacs-lisp
    (use-package skempo
      :hook ((emacs-lisp-mode lisp-interaction-mode) . skempo-mode)

      :bind
      (:map skempo-mode-map
            ("C-z" . skempo-complete-tag-or-call-on-region)
            ("M-g M-e" . skempo-forward-mark)
            ("M-g M-a" . skempo-backward-mark))

      :config
      (skempo-advice-mode)

      ;; Multiple modes!
      (skempo-define-tempo (let :tag t :abbrev t :mode (emacs-lisp-mode lisp-mode))
        "(let ((" p "))" n> r> ")")

      ;; Skeletons too! With mark jumping!
      (skempo-define-skeleton (defun :tag t :abbrev t :mode emacs-lisp-mode)
        "Name: "
        "(defun " str " (" @ - ")" \n
        @ _ ")" \n)

      ;; Clever tempo templates!
      (skempo-define-tempo (defvar :tag t :abbrev t :mode emacs-lisp-mode)
        "(defvar " (string-trim-right (buffer-name) (rx ".el" eos)) "-" p n>
        r> ")")

      ;; Define tags and abbrevs for existing skeletons!
      (skempo-define-function (shcase :tag t :abbrev t :mode sh-mode)
        sh-case)

      ;; This will override emacs-lisp's "defvar", but you can always call it with
      ;; skempo-complete-tag-or-call-on-region
      (skempo-define-tempo (defvar :tag t :mode lisp-interaction-mode)
        "(defvar var" p n> r> ")"))
  #+end_src
